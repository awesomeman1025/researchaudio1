% Psychtoolbox Setup
PsychDefaultSetup(2);
Screen('Preference', 'SkipSyncTests', 1); % Only way to make this work on my mac

% Window
[window, WindowRect] = PsychImaging('OpenWindow', 0, [0, 0, 0]); % Open window
HideCursor(); 

% --- AUDIO SETUP ---
nrchannels = 2;
Fs = 44100; 
InitializePsychSound(1); 
pahandle = PsychPortAudio('Open', [], 1, 1, Fs, nrchannels); 

% --- EXP DESIGN --- 
n_tones = 2; % tone 1 = male, tone 2 = female
n_dir = 2; % direction 1 = left to right, direction 2 = right to left 
n_repeat = 3; 
e_mat = expmat(1:n_tones, 1:n_dir);
rep_emat = repmat(e_mat, n_repeat, 1); 
[e_seq, rep_emat] = randseq(rep_emat); 
sorted_rep_emat = sortrows(rep_emat, 1); 
response_array = [sorted_rep_emat(:, 1), zeros(size(sorted_rep_emat, 1), 1)]; 

% --- MAIN EXPERIMENT ---
for trial_number = 1:size(sorted_rep_emat, 1)
    % Setup MakeAuditoryNoise
    p.Fs = Fs; % since Fs is already made 
    p.dur = 1; % Duration of noise in seconds -> might have to adjust down to 0.5
    p.width = 50; % Width of the filter -> need to adjust most likely 
    p.noiseType = 'Gaussian'; % I choose gaussian even though example chooses notch

    if sorted_rep_emat(trial_number, 2) == 1 % lets define male tone to be low frequency
        p.Fc = 150; % apparent average frequency for a male tone...
    else % lets do female tone
        p.Fc = 500; % definitely more than the average for the female tone but ensures significant difference
    end

    % Generate audio_stim
    audio_stim = MakeAuditoryNoise(p); % Straightforward, generate auditory stimulus 

    % Using MakeTrajectory to define a trajectory rather than changing
    % amplitude based on time
    if sorted_rep_emat(trial_number, 3) == 1 
        p.startxy = [-1, 0]; % -1 to 1 is left to right 
        p.endxy = [1, 0]; 
    else % Right to Left
        p.startxy = [1, 0]; % 1 to -1 is right to left
        p.endxy = [-1, 0]; % 
    end
    
    % Auditory Cue -> slightly confused on this part. By default, all of
    % these are true so I am setting them to true until I can fix black
    % screen of death 
    p.doppler = true; 
    p.itd = true; 
    p.ild = true; 
    p.inverseSquareLaw = true; 
    
    % MakeTrajectory
    [x, y] = MakeTrajectory(p);
    
    % Using auditoryCueIntegrator to combine all variables
    finalstimulus = auditoryCueIntegrator(p, audio_stim, x, y);
    
    % Play the audio
    PsychPortAudio('FillBuffer', pahandle, finalstimulus');
    PsychPortAudio('Start', pahandle, 1, 0, 1);
    WaitSecs(length(audio_stim) / Fs);

    % Keyboard Input
    key_input = '';
    keys_allowed = {'f', 'j'};
    while isempty(key_input)
        [keyIsDown, ~, keyCode] = KbCheck;
        if keyIsDown
            key_input = KbName(find(keyCode));
            if ~ismember(key_input, keys_allowed)
                key_input = '';
            end
        end
    end

    % Store key input into response array
    response_array{trial_number, 2} = key_input;

    % Stop audio
    PsychPortAudio('Stop', pahandle);
    Screen('Flip', window);
end

PsychPortAudio('Close', pahandle);
Screen('CloseAll');
ShowCursor();

% Save responses to a text file
fileID = fopen('responses.txt', 'w');
fprintf(fileID, '%d\t%s\n', response_array'); 
fclose(fileID);
